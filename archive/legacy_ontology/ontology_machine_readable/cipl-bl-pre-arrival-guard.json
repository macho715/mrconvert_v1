{
  "meta": {
    "source": "C:\\Users\\minky\\Downloads\\mrconvert_v1\\ONTOLOGY\\CIPL·BL Pre-Arrival Guard.docx",
    "type": "docx",
    "pages": null,
    "parsed_at": "2025-10-19T17:51:46+00:00",
    "ocr": {
      "used": false,
      "engine": "none",
      "lang": null
    }
  },
  "text": "좋아, “엔티티→관계→규칙→증거”로 뼈대를 세워서 온톨리지 청사진을 먼저 깔아뒀어. 캔버스에 정리본 올려놨다: CIPL·BL Pre-Arrival Guard — Ontology Blueprint v0.1. 거기서 클래스/프라퍼티, 15-스텝 상태머신, SHACL 제약, PRISM.KERNEL 연동, hvdc 네이밍 규칙까지 한 번에 볼 수 있어.\n티저로 핵심만 짚자면:\n상위 개념: Document/Shipment/GoodItem/Event(Regulatory·ETA/DEM)/Regulation·Permit/RiskClass(S-Class)/StorageCondition/Rate/Alert/Evidence.\n허용오차·게이트(±1.00%·±2.00%, OCR 0.60, TableAcc 98.00, EntityMatch 0.98)는 데이터 속성으로 고정값 선언.\nGov≥Carrier 원칙과 14종 Alert는 택소노미로 분리해서 추론·필터링이 쉬움.\nIncoterm-aware 운임/보험 로직·ETA→DEM_END 계산은 Computation 노드 + Evidence 링크로 투명화.\nPRISM.KERNEL 방식의 recap.card + proof.artifact(JSON)은 온톨리지 질의결과에서 바로 뽑도록 바인딩.\n근거는 너랑 쓰던 내부 레퍼런스들에 맞춰 깔았고(세부 수치는 캔버스에만, 여기선 경량화): \n다음 선택지는 셋 중 하나야—네가 고르면 바로 이어서 반영할게.\n/switch_mode ORACLE: HS↔UN↔S-Class 룰을 실제 SHACL/SPARQL 규칙으로 자세화(프로덕션 규칙 세트로 내림).\n/switch_mode LATTICE: CIPL/BL 필드 매핑을 RDF/JSON-LD 스키마로 세분화(필드별 정규화·코드리스트 포함).\n/switch_mode COST-GUARD: Ocean/Air Rate를 Rate 인스턴스 + 유효기간으로 로드하고, CIF/CFR 계산 파이프 연결.\n원하는 모드랑, 필요하면 hvdc-adopt-xxx-xxxx 코드값도 알려줘. 그러면 그 코드로 네임스페이스 고정해서 이어갈게.",
  "markdown": "좋아, “엔티티→관계→규칙→증거”로 뼈대를 세워서 온톨리지 청사진을 먼저 깔아뒀어\\. 캔버스에 정리본 올려놨다: __CIPL·BL Pre\\-Arrival Guard — Ontology Blueprint v0\\.1__\\. 거기서 클래스/프라퍼티, 15\\-스텝 상태머신, SHACL 제약, PRISM\\.KERNEL 연동, hvdc 네이밍 규칙까지 한 번에 볼 수 있어\\.\n\n티저로 핵심만 짚자면:\n\n- 상위 개념: Document/Shipment/GoodItem/Event\\(Regulatory·ETA/DEM\\)/Regulation·Permit/RiskClass\\(S\\-Class\\)/StorageCondition/Rate/Alert/Evidence\\.\n- 허용오차·게이트\\(±1\\.00%·±2\\.00%, OCR 0\\.60, TableAcc 98\\.00, EntityMatch 0\\.98\\)는 __데이터 속성__으로 고정값 선언\\.\n- Gov≥Carrier 원칙과 14종 Alert는 __택소노미__로 분리해서 추론·필터링이 쉬움\\.\n- Incoterm\\-aware 운임/보험 로직·ETA→DEM\\_END 계산은 __Computation 노드__ \\+ __Evidence 링크__로 투명화\\.\n- PRISM\\.KERNEL 방식의 recap\\.card \\+ proof\\.artifact\\(JSON\\)은 온톨리지 질의결과에서 바로 뽑도록 바인딩\\.\n\n근거는 너랑 쓰던 내부 레퍼런스들에 맞춰 깔았고\\(세부 수치는 캔버스에만, 여기선 경량화\\): \n\n다음 선택지는 셋 중 하나야—네가 고르면 바로 이어서 반영할게\\.\n\n1. __/switch\\_mode ORACLE__: HS↔UN↔S\\-Class 룰을 실제 SHACL/SPARQL 규칙으로 자세화\\(프로덕션 규칙 세트로 내림\\)\\.\n2. __/switch\\_mode LATTICE__: CIPL/BL 필드 매핑을 RDF/JSON\\-LD 스키마로 세분화\\(필드별 정규화·코드리스트 포함\\)\\.\n3. __/switch\\_mode COST\\-GUARD__: Ocean/Air Rate를 Rate 인스턴스 \\+ 유효기간으로 로드하고, CIF/CFR 계산 파이프 연결\\.\n\n원하는 모드랑, 필요하면 __hvdc\\-adopt\\-xxx\\-xxxx__ 코드값도 알려줘\\. 그러면 그 코드로 네임스페이스 고정해서 이어갈게\\.\n\n",
  "tables": []
}